(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[71],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=l(t),d=a,m=f["".concat(i,".").concat(d)]||f[d]||u[d]||o;return t?r.createElement(m,c(c({ref:n},p),{},{components:t})):r.createElement(m,c({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=f;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6726:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return i},toc:function(){return l},default:function(){return u}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),c=["components"],s={},i={unversionedId:"tools/erc725js/technical-reference/README",id:"tools/erc725js/technical-reference/README",isDocsHomePage:!1,title:"README",description:"erc725.js - v0.5.7 / Exports",source:"@site/docs/tools/erc725js/technical-reference/README.md",sourceDirName:"tools/erc725js/technical-reference",slug:"/tools/erc725js/technical-reference/README",permalink:"/tools/erc725js/technical-reference/README",editUrl:"https://github.com/lukso-network/docs-website/tree/main/docs/tools/erc725js/technical-reference/README.md",version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"How to read a Universal Profile contract's data with erc725.js ?",permalink:"/tools/erc725js/guides/read-up-with-erc725"},next:{title:"erc725",permalink:"/tools/erc725js/technical-reference/classes/erc725"}},l=[{value:"Installation",id:"installation",children:[]},{value:"Example Instantiation",id:"example-instantiation",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Testing",id:"testing",children:[]}],p={toc:l};function u(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"erc725.js - v0.5.7 / ",(0,o.kt)("a",{parentName:"p",href:"/tools/erc725js/technical-reference/modules"},"Exports")),(0,o.kt)("h1",{id:"erc725js"},"ERC725.js"),(0,o.kt)("p",null,"This library allows for interfacing with ERC725Y compliant contract on an EVM using the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md"},"ERC725YJSONSchema"),"."),(0,o.kt)("p",null,"For more information see ",(0,o.kt)("a",{parentName:"p",href:"https://docs.lukso.tech/"},"Documentation"),"."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"This package is currently in early stages of development, use only for testing or experimentation purposes")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"$ npm install erc725.js\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import ERC725 from "erc725.js";\n// Or alternately the named export in cases where it\n// assists with integration into node modules or commonjs.\nimport { ERC725 } from "erc725.js";\n')),(0,o.kt)("h2",{id:"example-instantiation"},"Example Instantiation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import ERC725 from \'erc725.js\';\nimport Web3 from \'web3\';\n\n// Part of LSP3-UniversalProfile Schema\n// https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-3-UniversalProfile.md\nconst schema = [\n  {\n    name: "SupportedStandards:ERC725Account",\n    key: "0xeafec4d89fa9619884b6b89135626455000000000000000000000000afdeb5d6",\n    keyType: "Mapping",\n    valueContent: "0xafdeb5d6",\n    valueType: "bytes",\n  },\n  {\n    name: "LSP3Profile",\n    key: "0x5ef83ad9559033e6e941db7d7c495acdce616347d28e90c7ce47cbfcfcad3bc5",\n    keyType: "Singleton",\n    valueContent: "JSONURL",\n    valueType: "bytes",\n  },\n  {\n    name: "LSP1UniversalReceiverDelegate",\n    key: "0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47",\n    keyType: "Singleton",\n    valueContent: "Address",\n    valueType: "address",\n  },\n];\n\nconst addresss = "0x0c03fba782b07bcf810deb3b7f0595024a444f4e";\nconst provider = new Web3.providers.HttpProvider("https://rpc.l14.lukso.network");\nconst config = {\n  ipfsGateway: \'https://ipfs.lukso.network/ipfs/\'\n}\n\nconst erc725 = new ERC725(schema, address, provider, config);\n')),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await erc725.getOwner();\n// > '0x28D25E70819140daF65b724158D00c373D1a18ee'\n\nawait erc725.getData(\"SupportedStandards:ERC725Account\");\n// > '0xafdeb5d6'\n\nawait erc725.getData(\"LSP3Profile\");\n/* >\n{\n    url: 'ipfs://QmXybv2LdJWscy1C6yRKUjvnaj6aqKktZX4g4xmz2nyYj2',\n    hash: '0xb4f9d72e83bbe7e250ed9ec80332c493b7b3d73e0d72f7b2c7ab01c39216eb1a',\n    hashFunction: 'keccak256(utf8)'\n}\n*/\n\nawait erc725.fetchData(\"LSP3Profile\"); // downloads and verifies the linked JSON\n/* > \n{\n    LSP3Profile: {\n        name: 'frozeman',\n        description: 'The inventor of ERC725 and ERC20...',\n        links: [\n            { title: 'Twitter', url: 'https://twitter.com/feindura' },\n            { title: 'lukso.network', url: 'https://lukso.network' }\n        ],\n        ...\n    }\n}\n*/\n")),(0,o.kt)("h2",{id:"testing"},"Testing"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},"$ npm test\n")))}u.isMDXComponent=!0}}]);